<UserControl x:Class="TeacherPlanner.ToDo.Views.TodoItemView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:TeacherPlanner.ToDo.Views"
             xmlns:converters="clr-namespace:TeacherPlanner.Converters"
             xmlns:viewmodel="clr-namespace:TeacherPlanner.ToDo.ViewModels"
             d:DataContext="{Binding Source={d:DesignInstance Type=viewmodel:TodoItemViewModel}}"
             mc:Ignorable="d" 
             d:DesignHeight="50" d:DesignWidth="960">
    <UserControl.Resources>
        <converters:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
    </UserControl.Resources>
    <Border BorderBrush="LightSlateGray" BorderThickness="5">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="2*"/>
            <ColumnDefinition Width="20*"/>
            <ColumnDefinition Width="2*"/>
            <ColumnDefinition Width="2*"/>
        </Grid.ColumnDefinitions>
        
        

        <Grid.Style>
            <Style>
                <Setter Property="Grid.Background" Value="LightSteelBlue" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsChecked}" Value="True">
                        <Setter Property="Grid.Background" Value="#D0D0D0"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Grid.Style>

            <CheckBox 
            Grid.Column="0"
            VerticalAlignment="Center"
            HorizontalAlignment="Center"
            IsChecked="{Binding IsChecked}"
            IsEnabled="{Binding HasActiveSubItems, Converter={StaticResource InverseBooleanConverter}}"
        >
            <CheckBox.LayoutTransform>
                <ScaleTransform ScaleX="2.5" ScaleY="2.5" />
            </CheckBox.LayoutTransform>
            
        </CheckBox>
        
        <!--User Text Entry-->
        <TextBox
            Grid.Column="1"
            Text="{Binding Content}"
            Margin="5"
            FontSize="25"
            VerticalContentAlignment="Center"
            IsReadOnly="{Binding IsChecked}"
        />
        
        
        <!-- ADD Button-->
        <Button 
            Style="{DynamicResource ButtonOverride}"
            HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
            Grid.Column="2" Margin="0" Padding="0"
            Background="Transparent"
            Content="+" FontFamily="{StaticResource BodyText}" FontSize="40"
            Foreground="Green"
            BorderBrush="Transparent" BorderThickness="0" 
            MouseEnter="Add_Button_MouseEnter" MouseLeave="Add_Button_MouseLeave"
            Command="{Binding AddSubItemCommand}"
            IsEnabled="{Binding IsChecked, Converter={StaticResource InverseBooleanConverter}}"
            />
        
        <!--DELETE Button-->
        <Button 
            Grid.Column="3" Margin="0" Padding="0"
            Content="X" FontFamily="{StaticResource TitleHandwritten}" FontSize="30"
            Foreground="Red"
            Background="Transparent" BorderBrush="Transparent" BorderThickness="0" 
            MouseEnter="Delete_Button_MouseEnter" MouseLeave="Delete_Button_MouseLeave"
            Command="{Binding RemoveSelfCommand}"
            IsEnabled="{Binding IsChecked, Converter={StaticResource InverseBooleanConverter}}"
            Visibility="{Binding 
                RelativeSource=
                    {
                        RelativeSource FindAncestor, 
                        AncestorType={x:Type local:TodoPageView}
                    },
                Path=DataContext.CanDeleteAnything, 
                Converter={StaticResource BooleanToVisibilityConverter}
            }">
                
        </Button>
    </Grid>
    </Border>
</UserControl>
